import org.gradle.api.internal.classpath.ModuleRegistry

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'nu.studer:gradle-plugindev-plugin:4.1'
        classpath 'org.codehaus.groovy:groovy-backports-compat23:3.0.8'
    }
}

plugins {
    id 'org.gradle.java-gradle-plugin'
    id 'org.gradle.groovy'
    id 'maven-publish'
    id 'net.researchgate.release' version '2.8.0'
    id 'com.gradle.plugin-publish' version '0.18.0'
}

apply plugin: 'idea'

group='net.researchgate'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation("org.spockframework:spock-core:2.1-groovy-3.0") { exclude group: 'org.codehaus.groovy' }
    testImplementation "org.eclipse.jgit:org.eclipse.jgit:5.0.3.201809091024-r"
    testImplementation gradleTestKit()
    testImplementation("org.junit.jupiter:junit-jupiter:5.7.1")

    // work-around for https://github.com/gradle/gradle/issues/16774
    testRuntimeOnly(files(project.services.get(ModuleRegistry).getModule('gradle-tooling-api-builders').classpath.asFiles.first()))
    testRuntimeOnly('com.google.guava:guava:27.1-android')
}

gradlePlugin {
    plugins {
        releasePlugin {
            displayName = 'Maven style release plugin for gradle'
            description = 'gradle-release is a plugin for providing a Maven-like release process to project using Gradle that supports git, subversion bazaar and mercurial'
            id = 'net.researchgate.release'
            implementationClass = 'net.researchgate.release.ReleasePlugin'
        }
    }
}

pluginBundle {
    website = 'https://github.com/researchgate/gradle-release'
    vcsUrl = 'https://github.com/researchgate/gradle-release'
    tags = ['release', 'git', 'hg', 'mercurial', 'svn', 'subversion', 'bzr', 'bazaar']
}

tasks.withType(Test).configureEach {
    dependsOn tasks.jar
    useJUnitPlatform()
    systemProperties.put('currentVersion', project.version)
}

release {
    git {
        requireBranch = '(main|\\d+\\.\\d+)'
    }
}

wrapper.gradleVersion = '7.6.6'

updateVersion.doFirst {
    def file = file('README.md')
    def content = file.text
    def versionPattern = /\d+(?:\.\d+)+/
    content = content.replaceAll("id 'net.researchgate.release' version '${versionPattern}'",
            "id 'net.researchgate.release' version '${version}'")
    content = content.replaceAll("net.researchgate:gradle-release:${versionPattern}",
            "net.researchgate:gradle-release:${version}")
    file.text = content
}
